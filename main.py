import os
import telebot
import requests
from flask import Flask, request

# --- –¢–æ–∫–µ–Ω –±–æ—Ç–∞ –∑ Render Environment Variables ---
BOT_TOKEN = os.environ.get("BOT_TOKEN")
if not BOT_TOKEN:
    raise ValueError("‚ùå BOT_TOKEN –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∏–π! –î–æ–¥–∞–π –π–æ–≥–æ —É Render ‚Üí Environment.")

bot = telebot.TeleBot(BOT_TOKEN)

# --- API –¥–ª—è –≤–∞–ª—é—Ç ---
EXCHANGE_API_URL = "https://api.exchangerate.host/latest?base=USD&symbols=UAH,EUR,PLN"

# --- API –¥–ª—è –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∏ ---
CRYPTO_API_URL = "https://api.coingecko.com/api/v3/simple/price"

# --- API –¥–ª—è –º–µ—Ç–∞–ª—ñ–≤ (XAU ‚Äì –∑–æ–ª–æ—Ç–æ, XAG ‚Äì —Å—Ä—ñ–±–ª–æ, XPT ‚Äì –ø–ª–∞—Ç–∏–Ω–∞, XPD ‚Äì –ø–∞–ª–∞–¥—ñ–π) ---
METALS_API_URL = "https://api.metals.live/v1/spot"

# --- API –¥–ª—è –ø–∞–ª—å–Ω–æ–≥–æ (—Ü—ñ–Ω–∏ –≤ –£–∫—Ä–∞—ó–Ω—ñ, –≤ —î–≤—Ä–æ/–¥–æ–ª–∞—Ä–∞—Ö) ---
FUEL_API_URL = "https://api.e-control.at/sprit/preise"

# --- Flask ---
app = Flask(__name__)

# --- Webhook URL ---
WEBHOOK_URL = f"{os.environ.get('RENDER_EXTERNAL_URL')}/webhook"

# –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ webhook
bot.remove_webhook()
bot.set_webhook(url=WEBHOOK_URL)


# --- –ö–æ–º–∞–Ω–¥–∞ /start ---
@bot.message_handler(commands=["start", "help"])
def start(message):
    bot.reply_to(
        message,
        "–ü—Ä–∏–≤—ñ—Ç! üëã –Ø –±–æ—Ç –Ω–∞ Render Free.\n\n"
        "–ö–æ–º–∞–Ω–¥–∏:\n"
        "üí∞ /exchange ‚Äî –∫—É—Ä—Å –≤–∞–ª—é—Ç\n"
        "‚Çø /crypto ‚Äî —Ç–æ–ø-10 –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç\n"
        "ü•á /metals ‚Äî —Ü—ñ–Ω–∏ –Ω–∞ –º–µ—Ç–∞–ª–∏\n"
        "‚õΩ /fuel ‚Äî —Ü—ñ–Ω–∏ –Ω–∞ –±–µ–Ω–∑–∏–Ω —ñ –¥–∏–∑–µ–ª—å\n"
    )


# --- –ö—É—Ä—Å –≤–∞–ª—é—Ç ---
@bot.message_handler(commands=["exchange"])
def exchange(message):
    try:
        r = requests.get(EXCHANGE_API_URL).json()
        usd = r["rates"]["UAH"]
        eur = r["rates"]["UAH"] / r["rates"]["EUR"]
        pln = r["rates"]["UAH"] / r["rates"]["PLN"]

        text = (
            f"üí± –ö—É—Ä—Å –≤–∞–ª—é—Ç (–¥–æ UAH)\n\n"
            f"üá∫üá∏ USD: {usd:.2f} –≥—Ä–Ω\n"
            f"üá™üá∫ EUR: {eur:.2f} –≥—Ä–Ω\n"
            f"üáµüá± PLN: {pln:.2f} –≥—Ä–Ω"
        )
        bot.reply_to(message, text)
    except Exception as e:
        bot.reply_to(message, "‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –∫—É—Ä—Å—É –≤–∞–ª—é—Ç.")
        print(e)


# --- –¢–æ–ø-10 –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç ---
@bot.message_handler(commands=["crypto"])
def crypto(message):
    try:
        params = {"vs_currency": "usd", "order": "market_cap_desc", "per_page": 10, "page": 1}
        data = requests.get("https://api.coingecko.com/api/v3/coins/markets", params=params).json()

        text = "‚Çø –¢–æ–ø-10 –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç\n\n"
        for coin in data:
            text += f"{coin['symbol'].upper()} ‚Äî {coin['current_price']}$ (üíπ {coin['price_change_percentage_24h']:.2f}%)\n"

        bot.reply_to(message, text)
    except Exception as e:
        bot.reply_to(message, "‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç.")
        print(e)


# --- –ú–µ—Ç–∞–ª–∏ ---
@bot.message_handler(commands=["metals"])
def metals(message):
    try:
        metals = requests.get(METALS_API_URL).json()
        # –§–æ—Ä–º–∞—Ç: [{"gold": price}, {"silver": price}, {"platinum": price}, {"palladium": price}]
        text = (
            f"ü•á –ú–µ—Ç–∞–ª–∏ (USD/oz)\n\n"
            f"–ó–æ–ª–æ—Ç–æ: {metals[0]['gold']}$\n"
            f"–°—Ä—ñ–±–ª–æ: {metals[1]['silver']}$\n"
            f"–ü–ª–∞—Ç–∏–Ω–∞: {metals[2]['platinum']}$\n"
            f"–ü–∞–ª–∞–¥—ñ–π: {metals[3]['palladium']}$"
        )
        bot.reply_to(message, text)
    except Exception as e:
        bot.reply_to(message, "‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –º–µ—Ç–∞–ª—ñ–≤.")
        print(e)


# --- –ü–∞–ª—å–Ω–µ ---
@bot.message_handler(commands=["fuel"])
def fuel(message):
    try:
        # –¶–µ API –∞–≤—Å—Ç—Ä—ñ–π—Å—å–∫–æ–≥–æ –∫–æ–Ω—Ç—Ä–æ–ª—é –ø–∞–ª—å–Ω–æ–≥–æ (–¥–µ–º–æ), –¥–∞–Ω—ñ –º–æ–∂–Ω–∞ –∞–¥–∞–ø—Ç—É–≤–∞—Ç–∏ –ø—ñ–¥ —É–∫—Ä. –¥–∂–µ—Ä–µ–ª–∞
        data = requests.get(FUEL_API_URL).json()
        # –î–ª—è –ø—Ä–∏–∫–ª–∞–¥—É –≤–∏—Ç—è–≥–∞—î–º–æ –∫—ñ–ª—å–∫–∞
        diesel = data[0]["sorte"] + " ‚Äî " + str(data[0]["preis"]) + " ‚Ç¨/L"
        petrol = data[1]["sorte"] + " ‚Äî " + str(data[1]["preis"]) + " ‚Ç¨/L"

        text = f"‚õΩ –¶—ñ–Ω–∏ –Ω–∞ –ø–∞–ª—å–Ω–µ\n\n{diesel}\n{petrol}"
        bot.reply_to(message, text)
    except Exception as e:
        bot.reply_to(message, "‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –ø—Ä–æ –ø–∞–ª—å–Ω–µ.")
        print(e)


# --- –û–±—Ä–æ–±–∫–∞ webhook ---
@app.route("/webhook", methods=["POST"])
def webhook():
    update = telebot.types.Update.de_json(request.get_data().decode("utf-8"))
    bot.process_new_updates([update])
    return "", 200


# --- –¢–µ—Å—Ç–æ–≤–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∞ ---
@app.route("/", methods=["GET"])
def index():
    return "Bot is running via Webhook on Render Free!", 200


# --- Flask –∑–∞–ø—É—Å–∫ ---
if __name__ == "__main__":
    port = int(os.environ.get("PORT", 5000))
    app.run(host="0.0.0.0", port=port)
