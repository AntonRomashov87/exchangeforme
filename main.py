import os
import telebot
import requests
from flask import Flask, request

# --- –¢–æ–∫–µ–Ω –±–æ—Ç–∞ ---
BOT_TOKEN = "–¢–í–û–ô_–¢–û–ö–ï–ù"
bot = telebot.TeleBot(BOT_TOKEN)

# --- API –¥–ª—è –≤–∞–ª—é—Ç ---
EXCHANGE_API_URL = "https://api.exchangerate.host/latest?base=USD&symbols=UAH,EUR,PLN"

# --- API –¥–ª—è –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∏ ---
CRYPTO_API_URL = "https://api.coingecko.com/api/v3/simple/price"

# --- API –¥–ª—è –¢–û–ü-10 –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç ---
CRYPTO_TOP10_URL = "https://api.coingecko.com/api/v3/coins/markets"

# --- API –¥–ª—è –±–µ–Ω–∑–∏–Ω—É/–¥–∏–∑–µ–ª—é ---
FUEL_API_URL = "https://api.globalpetrolprices.com/gasoline_and_diesel_prices.json"  
# (—Ç—É—Ç –±–µ–∑–∫–æ—à—Ç–æ–≤–Ω–æ –ø–æ–∫–∞–∑—É—î –∑–∞–≥–∞–ª—å–Ω—ñ —Å–≤—ñ—Ç–æ–≤—ñ —Ü—ñ–Ω–∏)

# --- Flask ---
app = Flask(__name__)

# --- Webhook URL ---
WEBHOOK_URL = f"{os.environ.get('RENDER_EXTERNAL_URL')}/webhook"

# –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ webhook
bot.remove_webhook()
bot.set_webhook(url=WEBHOOK_URL)


# --- –ö–æ–º–∞–Ω–¥–∞ /start ---
@bot.message_handler(commands=["start", "help"])
def start(message):
    bot.reply_to(
        message,
        "–ü—Ä–∏–≤—ñ—Ç! üëã –Ø –±–æ—Ç –Ω–∞ Render Free.\n\n"
        "–ö–æ–º–∞–Ω–¥–∏:\n"
        "üí∞ /exchange ‚Äî –∫—É—Ä—Å –≤–∞–ª—é—Ç\n"
        "‚Çø /crypto ‚Äî BTC, ETH, USDT\n"
        "üìä /topcrypto ‚Äî –¢–û–ü-10 –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç\n"
        "‚õΩ /fuel ‚Äî —Ü—ñ–Ω–∏ –Ω–∞ –±–µ–Ω–∑–∏–Ω —ñ –¥–∏–∑–µ–ª—å\n"
    )


# --- –ö—É—Ä—Å –≤–∞–ª—é—Ç ---
@bot.message_handler(commands=["exchange"])
def exchange(message):
    try:
        r = requests.get(EXCHANGE_API_URL).json()
        usd = r["rates"]["UAH"]
        eur = usd / r["rates"]["EUR"]
        pln = usd / r["rates"]["PLN"]

        text = (
            f"üí± –ö—É—Ä—Å –≤–∞–ª—é—Ç (–¥–æ UAH)\n\n"
            f"üá∫üá∏ USD: {usd:.2f} –≥—Ä–Ω\n"
            f"üá™üá∫ EUR: {eur:.2f} –≥—Ä–Ω\n"
            f"üáµüá± PLN: {pln:.2f} –≥—Ä–Ω"
        )
        bot.reply_to(message, text)
    except Exception as e:
        bot.reply_to(message, "‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –∫—É—Ä—Å—É –≤–∞–ª—é—Ç.")
        print(e)


# --- –¶—ñ–Ω–∏ –Ω–∞ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—É (BTC/ETH/USDT) ---
@bot.message_handler(commands=["crypto"])
def crypto(message):
    try:
        params = {"ids": "bitcoin,ethereum,tether", "vs_currencies": "usd,uah"}
        data = requests.get(CRYPTO_API_URL, params=params).json()

        text = (
            f"‚Çø –¶—ñ–Ω–∏ –Ω–∞ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—É\n\n"
            f"BTC: {data['bitcoin']['usd']}$ / {data['bitcoin']['uah']} –≥—Ä–Ω\n"
            f"ETH: {data['ethereum']['usd']}$ / {data['ethereum']['uah']} –≥—Ä–Ω\n"
            f"USDT: {data['tether']['usd']}$ / {data['tether']['uah']} –≥—Ä–Ω"
        )
        bot.reply_to(message, text)
    except Exception as e:
        bot.reply_to(message, "‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç.")
        print(e)


# --- –¢–û–ü-10 –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç ---
@bot.message_handler(commands=["topcrypto"])
def topcrypto(message):
    try:
        params = {"vs_currency": "usd", "order": "market_cap_desc", "per_page": 10, "page": 1}
        data = requests.get(CRYPTO_TOP10_URL, params=params).json()

        text = "üìä –¢–û–ü-10 –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç –∑–∞ –∫–∞–ø—ñ—Ç–∞–ª—ñ–∑–∞—Ü—ñ—î—é:\n\n"
        for coin in data:
            text += f"{coin['market_cap_rank']}. {coin['name']} ({coin['symbol'].upper()}): {coin['current_price']}$\n"
        bot.reply_to(message, text)
    except Exception as e:
        bot.reply_to(message, "‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¢–û–ü –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç.")
        print(e)


# --- –¶—ñ–Ω–∏ –Ω–∞ –±–µ–Ω–∑–∏–Ω —ñ –¥–∏–∑–µ–ª—å ---
@bot.message_handler(commands=["fuel"])
def fuel(message):
    try:
        data = requests.get(FUEL_API_URL).json()

        # –í–∏–±–µ—Ä–µ–º–æ —Å–µ—Ä–µ–¥–Ω—ñ —Å–≤—ñ—Ç–æ–≤—ñ —Ü—ñ–Ω–∏
        gasoline = data["global"]["gasoline"]["usd_per_liter"]
        diesel = data["global"]["diesel"]["usd_per_liter"]

        text = (
            f"‚õΩ –°–µ—Ä–µ–¥–Ω—ñ —Ü—ñ–Ω–∏ —É —Å–≤—ñ—Ç—ñ:\n\n"
            f"–ë–µ–Ω–∑–∏–Ω: {gasoline:.2f} $/–ª\n"
            f"–î–∏–∑–µ–ª—å: {diesel:.2f} $/–ª"
        )
        bot.reply_to(message, text)
    except Exception as e:
        bot.reply_to(message, "‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Ü—ñ–Ω –Ω–∞ –ø–∞–ª—å–Ω–µ.")
        print(e)


# --- –û–±—Ä–æ–±–∫–∞ webhook ---
@app.route("/webhook", methods=["POST"])
def webhook():
    update = telebot.types.Update.de_json(request.get_data().decode("utf-8"))
    bot.process_new_updates([update])
    return "", 200


# --- –¢–µ—Å—Ç–æ–≤–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∞ ---
@app.route("/", methods=["GET"])
def index():
    return "Bot is running via Webhook on Render Free!", 200


# --- Flask –∑–∞–ø—É—Å–∫ ---
if __name__ == "__main__":
    port = int(os.environ.get("PORT", 5000))
    app.run(host="0.0.0.0", port=port)
