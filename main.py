import telebot
import requests

# --- –í—Å—Ç–∞–≤ —Å–≤—ñ–π —Ç–æ–∫–µ–Ω —Å—é–¥–∏ ---
BOT_TOKEN = '8008617718:AAHYtH1YadkHebM2r8MQrMnRadYLTXdf4WQ'

# –ó–∞–º—ñ–Ω—ñ—Ç—å 'YOUR_OPENEXCHANGERATES_API_KEY' –Ω–∞ –≤–∞—à –∫–ª—é—á API
EXCHANGE_API_KEY = 'YOUR_OPENEXCHANGERATES_API_KEY'
EXCHANGE_API_URL = f"https://openexchangerates.org/api/latest.json?app_id={EXCHANGE_API_KEY}&symbols=UAH,USD,EUR,PLN"

# CoinGecko API –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Ü—ñ–Ω –Ω–∞ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—É
CRYPTO_API_URL = "https://api.coingecko.com/api/v3/simple/price"

bot = telebot.TeleBot(BOT_TOKEN)

@bot.message_handler(commands=['start', 'help'])
def send_welcome(message):
    welcome_text = (
        "–ü—Ä–∏–≤—ñ—Ç! üëã –Ø –±–æ—Ç –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –∫—É—Ä—Å—ñ–≤ –≤–∞–ª—é—Ç —Ç–∞ —Ü—ñ–Ω –Ω–∞ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—É.\n"
        "–û—Å—å –º–æ—ó –∫–æ–º–∞–Ω–¥–∏:\n\n"
        "üí∞ /exchange - –æ—Ç—Ä–∏–º–∞—Ç–∏ –∫—É—Ä—Å –≤–∞–ª—é—Ç (USD, EUR, PLN –¥–æ UAH)\n"
        "‚Çø /crypto - –æ—Ç—Ä–∏–º–∞—Ç–∏ —Ü—ñ–Ω–∏ –Ω–∞ –æ—Å–Ω–æ–≤–Ω—ñ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∏ (BTC, ETH, USDT)\n"
        "üí° /help - –≤–∏–≤–µ—Å—Ç–∏ —Ü—é –¥–æ–≤—ñ–¥–∫—É"
    )
    bot.reply_to(message, welcome_text)

@bot.message_handler(commands=['exchange'])
def get_exchange_rates(message):
    try:
        response = requests.get(EXCHANGE_API_URL)
        data = response.json()

        usd_to_base = data['rates']['UAH']
        eur_to_base = data['rates']['UAH'] / data['rates']['EUR']
        pln_to_base = data['rates']['UAH'] / data['rates']['PLN']
        
        exchange_text = (
            f"üí∞ **–ö—É—Ä—Å –≤–∞–ª—é—Ç (–¥–æ UAH)**:\n\n"
            f"üá∫üá∏ USD: {usd_to_base:.2f} –≥—Ä–Ω\n"
            f"üá™üá∫ EUR: {eur_to_base:.2f} –≥—Ä–Ω\n"
            f"üáµüá± PLN: {pln_to_base:.2f} –≥—Ä–Ω"
        )
        bot.reply_to(message, exchange_text, parse_mode='Markdown')
    except Exception as e:
        bot.reply_to(message, "‚ö†Ô∏è –í–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ –∫—É—Ä—Å—É –≤–∞–ª—é—Ç. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ.")
        print(f"–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ –∫—É—Ä—Å—É –≤–∞–ª—é—Ç: {e}")

@bot.message_handler(commands=['crypto'])
def get_crypto_prices(message):
    try:
        params = {'ids': 'bitcoin,ethereum,tether','vs_currencies': 'usd,uah'}
        response = requests.get(CRYPTO_API_URL, params=params)
        data = response.json()

        btc_usd = data['bitcoin']['usd']
        btc_uah = data['bitcoin']['uah']
        eth_usd = data['ethereum']['usd']
        eth_uah = data['ethereum']['uah']
        usdt_usd = data['tether']['usd']
        usdt_uah = data['tether']['uah']

        crypto_text = (
            f"‚Çø **–¶—ñ–Ω–∏ –Ω–∞ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—É**:\n\n"
            f"üìä **BTC (Bitcoin)**\n"
            f"‚îî  {btc_usd:,} $\n"
            f"‚îî  {btc_uah:,.0f} –≥—Ä–Ω\n\n"
            f"üìä **ETH (Ethereum)**\n"
            f"‚îî  {eth_usd:,} $\n"
            f"‚îî  {eth_uah:,.0f} –≥—Ä–Ω\n\n"
            f"üìä **USDT (Tether)**\n"
            f"‚îî  {usdt_usd} $\n"
            f"‚îî  {usdt_uah:.2f} –≥—Ä–Ω"
        )
        bot.reply_to(message, crypto_text, parse_mode='Markdown')
    except Exception as e:
        bot.reply_to(message, "‚ö†Ô∏è –í–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ —Ü—ñ–Ω –Ω–∞ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—É. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ.")
        print(f"–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ —Ü—ñ–Ω –Ω–∞ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—É: {e}")

if __name__ == '__main__':
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–æ...")
    bot.infinity_polling()
