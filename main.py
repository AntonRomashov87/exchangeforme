import os
import requests
from flask import Flask, request
import telebot
from telebot import types

# =======================
# –¢–æ–∫–µ–Ω Telegram (–≤—Å—Ç–∞–≤–ª–µ–Ω–∏–π –ø—Ä—è–º–æ)
# =======================
BOT_TOKEN = "8008617718:AAHYtH1YadkHebM2r8MQrMnRadYLTXdf4WQ"
WEBHOOK_URL = "https://exchangeforme.onrender.com/webhook"

bot = telebot.TeleBot(BOT_TOKEN)
app = Flask(__name__)

# =======================
# –§—É–Ω–∫—Ü—ñ—ó –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö
# =======================
def get_exchange_rates():
    url = "https://bank.gov.ua/NBUStatService/v1/statdirectory/exchange?json"
    try:
        data = requests.get(url, timeout=5).json()
        usd = next(item for item in data if item["cc"] == "USD")["rate"]
        eur = next(item for item in data if item["cc"] == "EUR")["rate"]
        pln = next(item for item in data if item["cc"] == "PLN")["rate"]
        return f"üíµ USD: {usd:.2f}‚Ç¥\nüí∂ EUR: {eur:.2f}‚Ç¥\nüáµüá± PLN: {pln:.2f}‚Ç¥"
    except Exception as e:
        print("Error get_exchange_rates:", e)
        return "‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –∫—É—Ä—Å–∏ –≤–∞–ª—é—Ç."

def get_crypto():
    url = "https://api.coingecko.com/api/v3/coins/markets"
    params = {"vs_currency": "usd", "order": "market_cap_desc", "per_page": 10, "page": 1}
    try:
        data = requests.get(url, params=params, timeout=5).json()
        result = "‚Çø –¢–æ–ø-10 –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç:\n"
        for coin in data:
            result += f"{coin['symbol'].upper()}: {coin['current_price']}$\n"
        return result
    except Exception as e:
        print("Error get_crypto:", e)
        return "‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∏."

def get_fuel_prices():
    try:
        fuel_data = {
            "–î–∏–∑–µ–ª—å": 56.50,
            "–ê-95": 57.80,
            "–ê-92": 55.20
        }
        result = "‚õΩ –¶—ñ–Ω–∏ –Ω–∞ –ø–∞–ª—å–Ω–µ (OKKO):\n"
        for k, v in fuel_data.items():
            result += f"{k}: {v:.2f}‚Ç¥\n"
        return result
    except Exception as e:
        print("Error get_fuel_prices:", e)
        return "‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —Ü—ñ–Ω–∏ –Ω–∞ –ø–∞–ª—å–Ω–µ."

# =======================
# –û–±—Ä–æ–±–Ω–∏–∫–∏ –∫–æ–º–∞–Ω–¥
# =======================
@bot.message_handler(commands=["start", "help"])
def start(message):
    print("Received /start or /help:", message)
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton("üíµ –í–∞–ª—é—Ç–∏")
    btn2 = types.KeyboardButton("‚Çø –ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞")
    btn3 = types.KeyboardButton("‚õΩ –ü–∞–ª—å–Ω–µ")
    markup.add(btn1, btn2, btn3)
    bot.send_message(message.chat.id, "–ü—Ä–∏–≤—ñ—Ç üëã\n–û–±–µ—Ä—ñ—Ç—å –∫–∞—Ç–µ–≥–æ—Ä—ñ—é:", reply_markup=markup)

@bot.message_handler(func=lambda message: True)
def handle_message(message):
    print("Received message:", message)
    if not hasattr(message, "text") or not message.text:
        print("No text in message")
        return
    if message.text == "üíµ –í–∞–ª—é—Ç–∏":
        bot.send_message(message.chat.id, get_exchange_rates())
    elif message.text == "‚Çø –ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞":
        bot.send_message(message.chat.id, get_crypto())
    elif message.text == "‚õΩ –ü–∞–ª—å–Ω–µ":
        bot.send_message(message.chat.id, get_fuel_prices())
    else:
        bot.send_message(message.chat.id, "–í–∏–±–µ—Ä—ñ—Ç—å –∫–æ–º–∞–Ω–¥—É –∑ –º–µ–Ω—é.")

# =======================
# Flask Webhook
# =======================
@app.route("/webhook", methods=["POST"])
def webhook():
    try:
        json_str = request.get_data().decode("UTF-8")
        update = telebot.types.Update.de_json(json_str)
        bot.process_new_updates([update])
    except Exception as e:
        print("Webhook processing error:", e)
    return "ok", 200

@app.route("/", methods=["GET"])
def index():
    return "–ë–æ—Ç –ø—Ä–∞—Ü—é—î ‚úÖ", 200

# =======================
# –ó–∞–ø—É—Å–∫
# =======================
if __name__ == "__main__":
    bot.remove_webhook()
    bot.set_webhook(url=WEBHOOK_URL)
    print(f"Webhook –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ: {WEBHOOK_URL}")
    port = int(os.environ.get("PORT", 10000))
    app.run(host="0.0.0.0", port=port)
