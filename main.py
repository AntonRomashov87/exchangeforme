import os
import requests
from flask import Flask, request
import telebot
from telebot import types

# =======================
# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è
# =======================
BOT_TOKEN = os.getenv("BOT_TOKEN")  # –∑–±–µ—Ä—ñ–≥–∞–π —Ç–æ–∫–µ–Ω —É Render Environment
WEBHOOK_URL = "https://exchangeforme.onrender.com/webhook"

bot = telebot.TeleBot(BOT_TOKEN)
app = Flask(__name__)

# =======================
# –î–∂–µ—Ä–µ–ª–∞ –¥–∞–Ω–∏—Ö
# =======================

def get_exchange_rates():
    """–û—Ç—Ä–∏–º–∞—Ç–∏ –∫—É—Ä—Å–∏ –≤–∞–ª—é—Ç –∑ –ù–ë–£"""
    url = "https://bank.gov.ua/NBUStatService/v1/statdirectory/exchange?json"
    try:
        data = requests.get(url, timeout=5).json()
        usd = next(item for item in data if item["cc"] == "USD")["rate"]
        eur = next(item for item in data if item["cc"] == "EUR")["rate"]
        pln = next(item for item in data if item["cc"] == "PLN")["rate"]
        return f"üíµ USD: {usd:.2f}‚Ç¥\nüí∂ EUR: {eur:.2f}‚Ç¥\nüáµüá± PLN: {pln:.2f}‚Ç¥"
    except Exception:
        return "‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –∫—É—Ä—Å–∏ –≤–∞–ª—é—Ç."

def get_crypto():
    """–û—Ç—Ä–∏–º–∞—Ç–∏ —Ç–æ–ø-10 –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç –∑ CoinGecko"""
    url = "https://api.coingecko.com/api/v3/coins/markets"
    params = {"vs_currency": "usd", "order": "market_cap_desc", "per_page": 10, "page": 1}
    try:
        data = requests.get(url, params=params, timeout=5).json()
        result = "‚Çø –¢–æ–ø-10 –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç:\n"
        for coin in data:
            result += f"{coin['symbol'].upper()}: {coin['current_price']}$\n"
        return result
    except Exception:
        return "‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∏."

def get_fuel_prices():
    """–û—Ç—Ä–∏–º–∞—Ç–∏ —Ü—ñ–Ω–∏ –Ω–∞ –ø–∞–ª—å–Ω–µ –∑ OKKO"""
    url = "https://api.okko.ua/fuel/prices"
    try:
        data = requests.get(url, timeout=5).json()
        prices = data.get("data", [])
        result = "‚õΩ –¶—ñ–Ω–∏ –Ω–∞ –ø–∞–ª—å–Ω–µ (OKKO):\n"
        for fuel in prices:
            name = fuel.get("name")
            price = fuel.get("price")
            result += f"{name}: {price}‚Ç¥\n"
        return result
    except Exception:
        return "‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —Ü—ñ–Ω–∏ –Ω–∞ –ø–∞–ª—å–Ω–µ."

# =======================
# –û–±—Ä–æ–±–∫–∞ –∫–æ–º–∞–Ω–¥
# =======================

@bot.message_handler(commands=["start", "help"])
def start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton("üíµ –í–∞–ª—é—Ç–∏")
    btn2 = types.KeyboardButton("‚Çø –ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞")
    btn3 = types.KeyboardButton("‚õΩ –ü–∞–ª—å–Ω–µ")
    markup.add(btn1, btn2, btn3)
    bot.send_message(message.chat.id, "–ü—Ä–∏–≤—ñ—Ç üëã\n–û–±–µ—Ä—ñ—Ç—å –∫–∞—Ç–µ–≥–æ—Ä—ñ—é:", reply_markup=markup)

@bot.message_handler(func=lambda message: True)
def handle_message(message):
    if message.text == "üíµ –í–∞–ª—é—Ç–∏":
        bot.send_message(message.chat.id, get_exchange_rates())
    elif message.text == "‚Çø –ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞":
        bot.send_message(message.chat.id, get_crypto())
    elif message.text == "‚õΩ –ü–∞–ª—å–Ω–µ":
        bot.send_message(message.chat.id, get_fuel_prices())
    else:
        bot.send_message(message.chat.id, "–í–∏–±–µ—Ä—ñ—Ç—å –∫–æ–º–∞–Ω–¥—É –∑ –º–µ–Ω—é.")

# =======================
# Flask Webhook
# =======================

@app.route("/webhook", methods=["POST"])
def webhook():
    json_str = request.get_data().decode("UTF-8")
    update = telebot.types.Update.de_json(json_str)
    bot.process_new_updates([update])
    return "ok", 200

@app.route("/", methods=["GET"])
def index():
    return "–ë–æ—Ç –ø—Ä–∞—Ü—é—î ‚úÖ", 200

# =======================
# –ì–æ–ª–æ–≤–Ω–∏–π –∑–∞–ø—É—Å–∫
# =======================

if __name__ == "__main__":
    bot.remove_webhook()
    bot.set_webhook(url=WEBHOOK_URL)
    # Flask –ø—ñ–¥ Gunicorn (—Ç–æ–º—É –±–µ–∑ app.run)
